#!/usr/bin/env node_modules/.bin/ts-node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var minimist = require("minimist");
var args_1 = require("../lib/common/args");
var util_1 = require("../lib/common/util");
var ls_routes_1 = require("../lib/ls-routes");
var args = minimist(process.argv.slice(2), {
    string: ['module', 'lazy-root', 'base-href', 'output'],
});
args_1.requiredArgs(args, ['module', 'lazy-root']);
var appModule = util_1.toAbsolute(args['module']);
var loadChildrenRoot = util_1.toAbsolute(args['lazy-root']);
var baseHref = args['base-href'] || '/';
var output = args['output'] || 'text';
ls_routes_1.lsRoutes({ appModule: appModule, baseHref: baseHref, loadChildrenRoot: loadChildrenRoot })
    .then(function (routes) {
    switch (output) {
        case 'json':
            console.log(JSON.stringify(routes, null, 2));
            break;
        case 'text':
            routes.forEach(function (_a) {
                var terminal = _a.terminal, matcher = _a.matcher;
                var suffix = '';
                console.log("Route: " + (terminal.path || '(empty path)'));
                if (matcher) {
                    switch (matcher.match) {
                        case 'exact':
                            console.log('  (matches exactly)');
                            break;
                        case 'prefix':
                            console.log('  (matches prefix)');
                            break;
                        case 'regex':
                            console.log('  Regex:', matcher.pattern);
                            break;
                    }
                }
                if (terminal.loadChildren && terminal.loadChildren.length > 0) {
                    terminal.loadChildren.forEach(function (loadChild) { return console.log("  Lazy loads: " + loadChild); });
                }
            });
            break;
        default:
            console.error("Unknown output format: " + output);
            process.exit(1);
    }
})
    .catch(function (err) {
    console.error('An error occurred while attempting to read routes', err);
    process.exit(1);
});
