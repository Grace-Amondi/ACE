var UrlMatcher = (function () {
    function UrlMatcher(pattern, config, scope) {
        if (config === void 0) { config = {}; }
        this.pattern = pattern;
        this.scope = scope;
        this.match = config.match || "exact";
        if (this.match === 'regex') {
            this._regex = new RegExp(pattern);
        }
    }
    UrlMatcher.prototype.matches = function (url) {
        // Strip the scope from the URL if present.
        if (url.startsWith(this.scope)) {
            url = url.substr(this.scope.length);
        }
        switch (this.match) {
            case 'exact':
                return this.pattern === url;
            case 'prefix':
                return url.startsWith(this.pattern);
            case 'regex':
                return this._regex.test(url);
        }
    };
    return UrlMatcher;
}());
export { UrlMatcher };
//# sourceMappingURL=url.js.map