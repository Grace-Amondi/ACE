var NgSwFetch = (function () {
    function NgSwFetch(scope, adapter) {
        this.scope = scope;
        this.adapter = adapter;
    }
    NgSwFetch.prototype._request = function (req) {
        var _this = this;
        return this
            .scope
            .fetch(req)
            .catch(function (err) { return _this.adapter.newResponse('', { status: 503 }); });
    };
    NgSwFetch.prototype._followRedirectIfAny = function (resp, limit, origUrl) {
        var _this = this;
        if (!!resp['redirected']) {
            if (limit <= 0) {
                return Promise.reject("Hit redirect limit when attempting to fetch " + origUrl + ".");
            }
            if (!resp.url) {
                return resp;
            }
            return this
                ._request(this.adapter.newRequest(resp.url))
                .then(function (newResp) { return _this._followRedirectIfAny(newResp, limit - 1, origUrl); });
        }
        return resp;
    };
    NgSwFetch.prototype.request = function (req, redirectSafe) {
        var _this = this;
        if (redirectSafe === void 0) { redirectSafe = false; }
        if (!redirectSafe) {
            return this._request(req);
        }
        return this._request(req).then(function (resp) { return _this._followRedirectIfAny(resp, 3, req.url); });
    };
    NgSwFetch.prototype.refresh = function (req) {
        var request;
        if (typeof req == 'string') {
            request = this.adapter.newRequest(this._cacheBust(req));
        }
        else {
            request = this.adapter.newRequest(this._cacheBust(req.url), req);
        }
        return this.request(request, false);
    };
    NgSwFetch.prototype._cacheBust = function (url) {
        var bust = Math.random();
        if (url.indexOf('?') == -1) {
            return url + "?ngsw-cache-bust=" + bust;
        }
        return url + "&ngsw-cache-bust=" + bust;
    };
    return NgSwFetch;
}());
export { NgSwFetch };
//# sourceMappingURL=fetch.js.map