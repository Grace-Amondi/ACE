var NgSwCacheImpl = (function () {
    function NgSwCacheImpl(caches, adapter) {
        this.caches = caches;
        this.adapter = adapter;
    }
    NgSwCacheImpl.prototype.normalize = function (req) {
        if (typeof req == 'string') {
            return this.adapter.newRequest(req);
        }
        return req;
    };
    NgSwCacheImpl.prototype.load = function (cache, req) {
        var _this = this;
        return this.caches.open(cache)
            .then(function (cache) { return cache.match(_this.normalize(req)); });
    };
    NgSwCacheImpl.prototype.store = function (cache, req, resp) {
        var _this = this;
        return this.caches.open(cache)
            .then(function (cache) { return cache.put(_this.normalize(req), resp); });
    };
    NgSwCacheImpl.prototype.invalidate = function (cache, req) {
        var _this = this;
        return this.caches.open(cache)
            .then(function (cache) { return cache.delete(_this.normalize(req)); });
    };
    NgSwCacheImpl.prototype.remove = function (cache) {
        return this.caches.delete(cache);
    };
    NgSwCacheImpl.prototype.keys = function () {
        return this.caches.keys();
    };
    NgSwCacheImpl.prototype.keysOf = function (cache) {
        return this.caches.open(cache)
            .then(function (cache) { return cache.keys(); });
    };
    return NgSwCacheImpl;
}());
export { NgSwCacheImpl };
//# sourceMappingURL=cache.js.map