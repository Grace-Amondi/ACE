import { NgSwAdapter } from './adapter';
export interface NgSwCache {
    load(cache: string, req: string | Request): Promise<Response>;
    store(cache: string, req: string | Request, resp: Response): Promise<any>;
    remove(cache: string): Promise<any>;
    invalidate(cache: string, req: string | Request): Promise<void>;
    keys(): Promise<string[]>;
    keysOf(cache: string): Promise<Request[]>;
}
export declare class NgSwCacheImpl implements NgSwCache {
    private caches;
    private adapter;
    constructor(caches: CacheStorage, adapter: NgSwAdapter);
    private normalize(req);
    load(cache: string, req: string | Request): Promise<Response>;
    store(cache: string, req: string | Request, resp: Response): Promise<any>;
    invalidate(cache: string, req: string | Request): Promise<any>;
    remove(cache: string): Promise<any>;
    keys(): Promise<string[]>;
    keysOf(cache: string): Promise<Request[]>;
}
